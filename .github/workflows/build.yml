name: Build and Deploy
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write  # Added for PR comments

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build JavaScript bundle
        run: npm run build

      - name: Copy To _site
        run: |
          mkdir -p _site/assets/css
          cp css/style.css _site/assets/css/style.css
          cp assets/css/builds.min.css _site/assets/css/builds.min.css
          mkdir -p _site/assets/js
          cp node_modules/maplibre-gl/dist/maplibre-gl.css _site/assets/css
          cp node_modules/@maplibre/maplibre-gl-geocoder/dist/maplibre-gl-geocoder.css _site/assets/css
          cp index.html _site/index.html
          cp spiders.html _site/spiders.html
          cp builds.html _site/builds.html
          cp wikidata.html _site/wikidata.html
          cp -R map/ _site/map
          cp -R images/ _site/assets/images
          cp -R fonts/ _site/assets/fonts
          cp assets/js/map.min.js _site/assets/js/map.min.js

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site/'

  deploy-production:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-preview:
    if: github.event_name == 'pull_request'
    environment:
      name: github-pages-preview
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy PR Preview
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment PR with Preview URL
        uses: actions/github-script@v6
        with:
          script: |
            const previewUrl = '${{ steps.deployment.outputs.page_url }}';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Deploy Preview ready! Preview URL: [${previewUrl}](${previewUrl})`
            });
